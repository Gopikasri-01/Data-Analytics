{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1_t3eFwhWUi8GsmHBXbGxZtUWpnyyvx65","timestamp":1726815980069}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# OOPS"],"metadata":{"id":"Hl1XbZiaJp2f"}},{"cell_type":"markdown","source":["# Class and Objects"],"metadata":{"id":"WxMoYLb8Jt3w"}},{"cell_type":"markdown","source":["38. Create a class called laptop and create the following variables and fucntions\n","\n","Variables--> Price, Processor, Ram\n","\n","Create object--> HP, DELL, LENOVO"],"metadata":{"id":"Eh2c_ZmMJy5o"}},{"cell_type":"code","source":["class laptop: # laptop is a class\n","  def __init__(self): # initialization\n","    self.price=0\n","    self.processor=''\n","    self.Ram=''\n","hp=laptop()# hp is an object for the class laptop\n","hp.price=50000\n","hp.processor='i5'\n","hp.Ram='8GB'\n","print('hp','price=',hp.price)\n","print('hp','processor=',hp.processor)\n","print('hp','Ram=',hp.Ram)\n","\n","dell=laptop() # dell is an object for the class laptop\n","dell.price=55000\n","dell.processor='i7'\n","dell.Ram='16GB'\n","print('dell','price=',dell.price)\n","print('dell','processor=',dell.processor)\n","print('dell','Ram=',dell.Ram)\n","\n","lenova=laptop() #lenova is an object for the class laptop\n","lenova.price=45000\n","lenova.processor='i6'\n","lenova.Ram='8GB'\n","print('lenova','price=',lenova.price)\n","print('lenova','processor=',lenova.processor)\n","print('lenova','Ram=',lenova.Ram)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7FEi5-TDVO1p","executionInfo":{"status":"ok","timestamp":1726924737622,"user_tz":-330,"elapsed":1068,"user":{"displayName":"Gopi S.K.","userId":"10767633746598176586"}},"outputId":"8a1fd885-2223-46ea-a661-07e96686daa4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hp price= 50000\n","hp processor= i5\n","hp Ram= 8GB\n","dell price= 55000\n","dell processor= i7\n","dell Ram= 16GB\n","lenova price= 45000\n","lenova processor= i6\n","lenova Ram= 8GB\n"]}]},{"cell_type":"markdown","source":["\"39. Create a class called KODAIKANAL and create all the positive variables and functions"],"metadata":{"id":"ilzxCMabKK-t"}},{"cell_type":"code","source":["class KODAIKANAL: # KODAIKANAL is a class\n","iu7"],"metadata":{"id":"InhgPjsEvZC7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["40. Create a class called Student and\n","\n","variables --> name and register number using constructor\n","\n","Create a function called display which should display the name and register number of the student"],"metadata":{"id":"-sw5OobPKinA"}},{"cell_type":"code","source":["class Student: # Student is a class\n","  def __init__(self,name,register_number):# initialization\n","    self.name='name'\n","    self.register_number='register number'\n","  def display(self):\n","      print('name', self.name)\n","      print('register number', self.register_number)\n","student1=Student('Dhivya','12345')\n","student1.display()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x-FIv7TrvuXL","executionInfo":{"status":"ok","timestamp":1726925974144,"user_tz":-330,"elapsed":455,"user":{"displayName":"Gopi S.K.","userId":"10767633746598176586"}},"outputId":"ae8f35f8-78bb-4dc9-b125-efde827fa7ee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["name name\n","register number register number\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"jlpgQgBb5en0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["41. Create a class called FRUIT and\n","\n","variables--> colour using '_ _ init _ _' method\n","\n","Create an object called Apple \"Pass the colour variable as a parameter through object\""],"metadata":{"id":"5UVWUvUKK9FR"}},{"cell_type":"markdown","source":["42. Create a class called ANIMAL with a method sound() that prints \"Animal makes a sound\". Create a derived class called Dog that inherits from ANIMAL and overrides the sound() method to print \"Dog barks\". Create another derived class called BIRD that inherits from ANIMAL and overrides the sound() method to print \"Birds sing\""],"metadata":{"id":"cDgkW1IsMLhJ"}}]}